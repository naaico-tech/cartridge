{
	"info": {
		"_postman_id": "a9b8e1d1-9c6a-4b7a-8e1d-1a9b8e1d1a9b",
		"name": "Cartridge Backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"health"
					]
				},
				"description": "Checks if the backend service is running."
			},
			"response": []
		},
		{
			"name": "2. Test DB Connection",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\": \"postgresql\",\n    \"host\": \"localhost\",\n    \"port\": 5432,\n    \"database\": \"analytics\",\n    \"username\": \"user\",\n    \"password\": \"password\",\n    \"schema\": \"public\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/scanner/test-connection",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"scanner",
						"test-connection"
					]
				},
				"description": "Tests the connection to the target data source."
			},
			"response": []
		},
		{
			"name": "3. Scan Schema",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"schema_data\", JSON.stringify(jsonData));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"connection\": {\n        \"type\": \"postgresql\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"database\": \"analytics\",\n        \"username\": \"user\",\n        \"password\": \"password\",\n        \"schema\": \"public\"\n    },\n    \"tables\": [],\n    \"include_samples\": true,\n    \"sample_size\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/scanner/scan",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"scanner",
						"scan"
					]
				},
				"description": "Scans the schema of the provided data source. The output is saved to an environment variable `schema_data` to be used in the next request."
			},
			"response": []
		},
		{
			"name": "4. Generate Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"project_id\", jsonData.project_id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"schema_data\": {{schema_data}},\n    \"model_types\": [\n        \"staging\",\n        \"intermediate\",\n        \"marts\"\n    ],\n    \"ai_model\": \"gpt-4\",\n    \"include_tests\": true,\n    \"include_docs\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/projects/generate",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"projects",
						"generate"
					]
				},
				"description": "Generates a dbt project from the schema scan results. The `project_id` is saved to an environment variable for the next request."
			},
			"response": []
		},
		{
			"name": "5. Download Project",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/projects/{{project_id}}/download",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"projects",
						"{{project_id}}",
						"download"
					]
				},
				"description": "Downloads the generated dbt project as a tar file."
			},
			"response": []
		}
	],
	"event": [],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "project_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_data",
			"value": "",
			"type": "string"
		}
	]
}
